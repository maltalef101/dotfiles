//  _        ___                                      ___ _
// | |      / __)_                                   / __|_)
// | | ____| |__| |_ _ _ _ ____      ____ ___  ____ | |__ _  ____    ____ ___  ____
// | |/ _  )  __)  _) | | |    \    / ___) _ \|  _ \|  __) |/ _  |  / ___) _ \|  _ \
// | ( (/ /| |  | |_| | | | | | |  ( (__| |_| | | | | |  | ( ( | |_| |  | |_| | | | |
// |_|\____)_|   \___)____|_|_|_|   \____)___/|_| |_|_|  |_|\_|| (_)_|   \___/|_| |_|
// A WindowManager for Adventurers                         (____/
// For info about configuration please visit https://github.com/leftwm/leftwm/wiki

#![enable(implicit_some)]
(
    modkey: "Mod4",
    mousekey: "Mod4",
    workspaces: [],
    tags: [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
    ],
    max_window_width: None,
    layouts: [
        MainAndVertStack,
    ],
    layout_mode: Tag,
    insert_behavior: Top,
    scratchpad: [
        (name: "Alacritty", value: "alacritty", x: 860, y: 390, height: 34, width: 120),
    ],
    window_rules: [],
    disable_current_tag_swap: false,
    disable_tile_drag: false,
    disable_window_snap: true,
    focus_behaviour: Sloppy,
    focus_new_windows: true,
    single_window_border: true,
    sloppy_mouse_follows_focus: true,
    keybind: [
        (command: Execute, value: "$TERMINAL",
            modifier: ["modkey"],
            key: "Return"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "Return"),
        (command: ToggleFloating, 
            modifier: ["modkey"],
            key: "space"),
        (command: MoveWindowTop,
            modifier: ["modkey", "Shift"],
            key: "space"),
        (command: Execute, value: "dunstctl close",
            modifier: ["Control"],
            key: "space"),
        (command: Execute, value: "dunstctl close-all",
            modifier: ["Control", "Shift"],
            key: "space"),
        (command: Execute, value: "dunstctl action",
            modifier: ["Mod1", "Shift"],
            key: "space"),

        (command: GotoTag, value: "1",
            modifier: ["modkey"],
            key: "1"),
        (command: MoveToTag, value: "1",
            modifier: ["modkey", "Shift"],
            key: "1"),
        (command: GotoTag, value: "2",
            modifier: ["modkey"],
            key: "2"),
        (command: MoveToTag, value: "2",
            modifier: ["modkey", "Shift"],
            key: "2"),
        (command: GotoTag, value: "3",
            modifier: ["modkey"],
            key: "3"),
        (command: MoveToTag, value: "3",
            modifier: ["modkey", "Shift"],
            key: "3"),
        (command: GotoTag, value: "4",
            modifier: ["modkey"],
            key: "4"),
        (command: MoveToTag, value: "4",
            modifier: ["modkey", "Shift"],
            key: "4"),
        (command: GotoTag, value: "5",
            modifier: ["modkey"],
            key: "5"),
        (command: MoveToTag, value: "5",
            modifier: ["modkey", "Shift"],
            key: "5"),
        (command: GotoTag, value: "6",
            modifier: ["modkey"],
            key: "6"),
        (command: MoveToTag, value: "6",
            modifier: ["modkey", "Shift"],
            key: "6"),
        (command: GotoTag, value: "7",
            modifier: ["modkey"],
            key: "7"),
        (command: MoveToTag, value: "7",
            modifier: ["modkey", "Shift"],
            key: "7"),
        (command: GotoTag, value: "8",
            modifier: ["modkey"],
            key: "8"),
        (command: MoveToTag, value: "8",
            modifier: ["modkey", "Shift"],
            key: "8"),
        (command: GotoTag, value: "9",
            modifier: ["modkey"],
            key: "9"),
        (command: MoveToTag, value: "9",
            modifier: ["modkey", "Shift"],
            key: "9"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "Tab"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "Tab"),
        (command: CloseWindow, value: "true",
            modifier: ["modkey"],
            key: "q"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "q"),
        (command: SwapTags, value: "$BROWSER",
            modifier: ["modkey"],
            key: "w"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "w"),
        (command: Execute, value: "emacs",
            modifier: ["modkey"],
            key: "e"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "e"),
        (command: Execute, value: "$TERMINAL -e lf",
            modifier: ["modkey"],
            key: "r"),
        (command: SoftReload, value: "true",
            modifier: ["modkey", "Shift"],
            key: "r"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "t"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "t"),
        (command: Execute, value: "telegram-desktop",
            modifier: ["modkey"],
            key: "y"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "y"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "u"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "u"),
        (command: Execute, value: "$TERMINAL -e htop",
            modifier: ["modkey"],
            key: "i"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "i"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "o"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "o"),
        (command: Execute, value: "mpc toggle",
            modifier: ["modkey"],
            key: "p"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "p"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "a"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "a"),
        (command: ToggleSticky,
            modifier: ["modkey"],
            key: "s"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "s"),
        (command: Execute, value: "rofi -show run",
            modifier: ["modkey"],
            key: "d"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "d"),
        (command: ToggleFullScreen,
            modifier: ["modkey"],
            key: "f"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "f"),
        (command: ToggleScratchPad, value: "Alacritty",
            modifier: ["modkey"],
            key: "g"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "g"),
        (command: FocusWindowDown,
            modifier: ["modkey"],
            key: "j"),
        (command: MoveWindowDown,
            modifier: ["modkey", "Shift"],
            key: "j"),
        (command: FocusWindowUp,
            modifier: ["modkey"],
            key: "k"),
        (command: MoveWindowUp,
            modifier: ["modkey", "Shift"],
            key: "k"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "l"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "l"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "less"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "greater"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "z"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "z"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "x"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "x"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "c"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "c"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "v"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "v"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "b"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "b"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "n"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "n"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "m"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "m"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "comma"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "comma"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "period"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "period"),
        (command: Execute, value: "true",
            modifier: ["modkey"],
            key: "minus"),
        (command: Execute, value: "true",
            modifier: ["modkey", "Shift"],
            key: "minus"),
    ],
    state_path: None,
    auto_derive_workspaces: true,
)
